name: CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: ${{ matrix.ros_distro }} (node ${{ matrix.node_version }})
    if: ${{ github.actor != 'RWT-bot' }}
    runs-on: ubuntu-latest
    container:
      image: ros:${{ matrix.ros_distro }}-ros-core
      options: --cap-add=SYS_ADMIN
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [noetic]
        node_version: [18, 20]
    env:
      ROS_DISTRO: ${{ matrix.ros_distro }}
    steps:
      - name: Install git in container
        run: |
          apt-get update
          apt-get install -q -y git
      - name: Set git safe directory
        run: |
          git config --global safe.directory '*'
      - uses: actions/checkout@v4
        env:
          TOKEN: "${{ github.event_name == 'push' && endsWith(github.ref, 'develop') && matrix.ros_distro == 'noetic' && secrets.RWT_BOT_PAT || github.token }}"
        with:
          token: ${{ env.TOKEN }}
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: ${{ matrix.node_version }}
      - name: Own /github/home and PWD
        run: |
          chown -hR 1001:121 /github/home .
      - name: Install apt dependencies
        run: |
          apt-get install -q -y libasound2 libnss3 ros-$ROS_DISTRO-rosbridge-server ros-$ROS_DISTRO-tf2-web-republisher ros-$ROS_DISTRO-common-tutorials ros-$ROS_DISTRO-rospy-tutorials ros-$ROS_DISTRO-actionlib-tutorials
      - name: Tests
        run: |
          bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && bash test/build.bash"

  ci_ros:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [noetic]
        node_version: [18, 20]
    container:
      image: ubuntu:focal
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          cache: npm
          node-version: ${{ matrix.node_version }}
      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distro }}
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install --no-install-recommends -y \
          libasound2 \
          libnss3 \
          ros-${{ matrix.ros_distro }}-rosbridge-server \
          ros-${{ matrix.ros_distro }}-tf2-web-republisher \
          ros-${{ matrix.ros_distro }}-common-tutorials \
          ros-${{ matrix.ros_distro }}-rospy-tutorials \
          ros-${{ matrix.ros_distro }}-actionlib-tutorials
      - name: Run tests
        run: |
          bash -c "source /opt/ros/${{ matrix.ros_distro }}/setup.bash && bash test/build.bash"